document.addEventListener('DOMContentLoaded', function () {
    const form = document.querySelector('form');
    const webhookURL = "https://discord.com/api/webhooks/1396248919377445016/_0PgLEUDYkGznLQsE7gyh9PA_aNBD2kmxxAZLdiugDdOJOQFKvBzldCQbjKrFcxZfF4-";
    let isSubmitting = false;

    form.querySelectorAll('input').forEach(input => {
        input.addEventListener('input', () => {
            validateField(input);
        });
    });

    form.addEventListener('submit', function (e) {
        e.preventDefault();

        if (isSubmitting) return;
        isSubmitting = true;

        let isValid = true;
        form.querySelectorAll('.error-message').forEach(el => el.remove());
        form.querySelectorAll('input').forEach(input => {
            input.classList.remove('input-error');
        });

        form.querySelectorAll('input').forEach(input => {
            const valid = validateField(input);
            if (!valid) isValid = false;
        });

        if (!isValid) {
            isSubmitting = false;
            return;
        }

        const lastSubmit = localStorage.getItem('lastFormSubmit');
        if (lastSubmit) {
            const lastDate = new Date(lastSubmit);
            const now = new Date();
            const diffDays = Math.floor((now - lastDate) / (1000 * 60 * 60 * 24));
            if (diffDays < 7) {
                form.reset();
                document.getElementById('days-popup').textContent = ` ${diffDays} –¥–Ω—ñ–≤ —Ç–æ–º—É`;
                document.getElementById('days-next-form').textContent = ` ${7 - diffDays} –¥–Ω—ñ–≤`;
                window.scrollTo({ top: 0, behavior: 'smooth' });
                const popup = document.getElementById('popupRecruitment');
                popup.style.display = 'flex';
                document.body.style.overflow = 'hidden';
                document.getElementById('btn__close-popup').addEventListener('click', () => {
                    popup.style.display = 'none';
                    document.body.style.overflow = '';
                });
                isSubmitting = false;
                return;
            }
        }

        const email = document.getElementById('email').value;
        const discord = document.getElementById('usernameDiscord').value;
        const dlc = document.getElementById('dlc').value;
        const age = document.getElementById('age').value;
        const activity = document.getElementById('activity').value;
        const reason = document.getElementById('person').value;
        const km = document.getElementById('km').value;
        const comment = document.getElementById('comment').value || "–ù–µ–º–∞—î";

        const message = `üì• **–ù–æ–≤–∞ –∑–∞—è–≤–∫–∞ –Ω–∞ –≤—Å—Ç—É–ø –¥–æ –∫–æ–º–ø–∞–Ω—ñ—ó**:
üìß Email: ${email}
üë§ Discord username: ${discord}
üß© DLC: ${dlc}
üéÇ –í—ñ–∫: ${age}
üöõ –ê–∫—Ç–∏–≤–Ω—ñ—Å—Ç—å –Ω–∞ —Ç–∏–∂–¥–µ–Ω—å: ${activity}
‚ùì –ß–æ–º—É —Ö–æ—á–µ –ø—Ä–∏—î–¥–Ω–∞—Ç–∏—Å—è: ${reason}
üìè –ö–º/—Ç–∏–∂–¥–µ–Ω—å: ${km}
üí¨ –ö–æ–º–µ–Ω—Ç–∞—Ä: ${comment}
üïí –î–∞—Ç–∞: ${new Date().toLocaleString('uk-UA')}`;

        fetch(webhookURL, {
            method: "POST",
            headers: {
                "Content-Type": "application/json",
            },
            body: JSON.stringify({
                username: "Freightmen of Ukraine - –û–Ω–ª–∞–π–Ω –∑–∞—è–≤–∫–∏ –Ω–∞ –≤—Å—Ç—É–ø",
                content: message,
            }),
        }).then(response => {
            if (response.ok) {
                localStorage.setItem('lastFormSubmit', new Date().toISOString());
                document.querySelector('.container__form-sended').style.display = 'flex';
                window.scrollTo({ top: 0, behavior: 'smooth' });
                form.reset();
            }
        }).catch(error => {
            console.error("–ü–æ–º–∏–ª–∫–∞ –ø—Ä–∏ –≤—ñ–¥–ø—Ä–∞–≤—Ü—ñ –∑–∞—è–≤–∫–∏:", error);
            alert("–°—Ç–∞–ª–∞—Å—è –ø–æ–º–∏–ª–∫–∞ –ø—Ä–∏ –≤—ñ–¥–ø—Ä–∞–≤—Ü—ñ –∑–∞—è–≤–∫–∏.");
        }).finally(() => {
            isSubmitting = false;
        });
    });

    document.getElementById('close__btn')?.addEventListener('click', () => {
        document.querySelector('.container__form-sended').style.display = 'none';
    });

    function validateField(input) {
        const value = input.value.trim();
        const id = input.id;
        let message = '';

        if (id === 'email') {
            const emailPattern = /^[a-z0-9._%+-]+@[a-z0-9.-]+\.[a-z]{2,}$/;
            if (!emailPattern.test(value)) message = '–í–≤–µ–¥—ñ—Ç—å –∫–æ—Ä–µ–∫—Ç–Ω—É –µ–ª–µ–∫—Ç—Ä–æ–Ω–Ω—É –∞–¥—Ä–µ—Å—É';
        } else if (id === 'usernameDiscord') {
            if (value.length < 3) message = "–Ü–º'—è –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ –º–∞—î –º—ñ—Å—Ç–∏—Ç–∏ —â–æ–Ω–∞–π–º–µ–Ω—à–µ 3 —Å–∏–º–≤–æ–ª–∏";
        } else if (id === 'dlc') {
            if (value === '') message = "–¶–µ –ø–æ–ª–µ –æ–±–æ–≤'—è–∑–∫–æ–≤–µ –¥–ª—è –∑–∞–ø–æ–≤–Ω–µ–Ω–Ω—è";
        } else if (id === 'age') {
            if (!/^\d{1,2}$/.test(value) || +value < 14 || +value > 99) message = '–í—ñ–∫ –º–∞—î –±—É—Ç–∏ –≤—ñ–¥ 14 –¥–æ 99';
        } else if (id === 'activity') {
            if (value.length < 3) message = '–û–ø–∏—à—ñ—Ç—å –í–∞—à—É –∞–∫—Ç–∏–≤–Ω—ñ—Å—Ç—å';
        } else if (id === 'person') {
            if (value.length < 5) message = '–ù–∞–ø–∏—à—ñ—Ç—å –±—ñ–ª—å—à–µ –ø—Ä–æ –º–æ—Ç–∏–≤–∞—Ü—ñ—é –ø—Ä–∏—î–¥–Ω–∞—Ç–∏—Å—è';
        } else if (id === 'km') {
            if (!/^\d{3,5}$/.test(value)) message = '–í–∫–∞–∂—ñ—Ç—å –∫—ñ–ª—å–∫—ñ—Å—Ç—å –∫–º –≤—ñ–¥ 100 –¥–æ 99999';
        }

        input.classList.remove('input-error');
        input.parentNode.querySelector('.error-message')?.remove();

        if (message) {
            showError(input, message);
            return false;
        }
        return true;
    }

    function showError(input, message) {
        input.classList.add('input-error');
        const error = document.createElement('div');
        error.className = 'error-message';
        error.textContent = message;
        input.parentNode.appendChild(error);
        requestAnimationFrame(() => {
            error.classList.add('visible');
        });
    }
});